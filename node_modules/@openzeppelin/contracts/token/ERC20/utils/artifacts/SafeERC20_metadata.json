{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "currentAllowance",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "requestedDecrease",
						"type": "uint256"
					}
				],
				"name": "SafeERC20FailedDecreaseAllowance",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "SafeERC20FailedOperation",
				"type": "error"
			}
		],
		"devdoc": {
			"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
			"errors": {
				"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
					{
						"details": "Indicates a failed `decreaseAllowance` request."
					}
				],
				"SafeERC20FailedOperation(address)": [
					{
						"details": "An operation with an ERC20 token failed."
					}
				]
			},
			"kind": "dev",
			"methods": {},
			"title": "SafeERC20",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": "SafeERC20"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x32fc81940e398095a082754088b43bcd70dda770a819586abc34fe8b387a42b4",
			"license": "MIT",
			"urls": [
				"bzz-raw://59e2c83e48dbd6c4576400811d11eccbbe8dd44d652fdbaabab22b6fa1188bba",
				"dweb:/ipfs/QmZkWkDCQGwJH44EN61jov9MY34qg15WYtAvJYvkSJusx4"
			]
		},
		"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
			"keccak256": "0xfd0659db058dc4bbbe45130dcaf1a141f720b45b7423f217b3cec1ed165c61a3",
			"license": "MIT",
			"urls": [
				"bzz-raw://3bc6e64ef28014d8d89b20ad2ce1fd6c90adc11f70460f464b55e508331b376e",
				"dweb:/ipfs/QmbGpR8gvW4VhPrfyfmj84g77zufGszaBQsDqxfCVu6LAi"
			]
		},
		"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0x77ac5c86845c8e2cf952ecc293a854c02a41d546ae38d1fb9048bf45a2b852f7",
			"license": "MIT",
			"urls": [
				"bzz-raw://3c39a3f67ba3359bcffad116a3d195ac8abcb6295300715c59b3634e954925ed",
				"dweb:/ipfs/QmSY4qVDm5Rrdyk8ucJyQU88iKYGunNFweETGmmTF5nzQr"
			]
		},
		"node_modules/@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x938edcd4a5bf9243b046fab62dd3860de2d67fd4955a4137affed47a084b6e37",
			"license": "MIT",
			"urls": [
				"bzz-raw://f0c206a6d444be1988852660bbf2f87a80c884ef3bef7ea300d1e2075b47e4b8",
				"dweb:/ipfs/QmZ89P6Gs6AxZ52cVzmNUUUh2RUQvjJ5MWVmFMunNemkwC"
			]
		}
	},
	"version": 1
}